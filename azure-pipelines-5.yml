# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: 'ubuntu-latest'
 
jobs:
- job: Build
  steps:
  # - task: Docker@2
  #   inputs:
  #     command: 'build'
  #     Dockerfile: 'Dockerfile'
  #     tags: 'latest'
  #     arguments: '-t testimg235'
  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: '$(Pipeline.Workspace)/**.yaml'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
      
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: 'drop'
      
- deployment: Deploy
  environment: 'shigupt.something'
  dependsOn: Build
  strategy:
    runOnce:
      deploy:
        steps:
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '$(System.ArtifactsDirectory)'
        - task: HelmInstaller@0
          inputs:
            helmVersion: '2.14.1'
        - task: CmdLine@2
          inputs:
            script: |
              cd $(System.DefaultWorkingDirectory)
              ls

            
        - task: HelmDeploy@0
          name: helmdep
          inputs:
            connectionType: 'Azure Resource Manager'
            namespace: 'something'
            command: 'install'
            chartType: 'FilePath'
            chartPath: 'drop/demo-chart1*.gz'
            releaseName: 'release1nov30'
            overrideValues: 'image.repository=testimg215'
            waitForExecution: false

# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: 'echo "$(helmdep.helmOutput)"'

